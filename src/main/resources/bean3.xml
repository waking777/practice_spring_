<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">


    <!--配置spring的ioc，吧service对象配置进来-->
    <bean id="accountService3" class="com.itheima.service.impl.AccountServiceImpl3"></bean>

    <!-- spring中基于xml的aop配置步骤
        1.吧通知bean也交给spring来管理
        2.使用aop:config标签来表明开始aop的配置
        3.使用aop：aspect标签表明配置切面
                属性：id：给切面提供一个唯一标识
                      ref：指定通知类bean的id
        4.在aop：aspect标签的内部使用对应标签来配置通知的类型
            我们现在的示例是让printLog方法在切入点方法执行之前执行，所以是前置通知，
            aop：before: 来配置前置通知
                method属性：用于指定Logger类中哪个方法是前置通知
                pointcut属性：用于指定切入点表达式，该表达式的含义是指的是对业务层中哪些方法增强

            切入点表达式的写法：
                关键字：execution(表达式)
                表达式：
                        访问修饰符  返回值  包名.包名.包名.类名.方法名（参数列表）
                标准的表达式写法：
                        public void com.itheima.service.impl.AccountServiceImpl.saveAccount()
                访问修饰符可以省略
                返回值可以使用通配符表示任意返回值
                包名可以使用通配符表示任意包，但是有几个包就要写几个星
                包名可以用..表示当前包及其子包
                类名和方法名都可以使用星号来实现通配
                参数列表：
                    可以直接写数据类型：
                        基本类型直接写名称
                        引用名称写包名.类型的格式
                    可以使用..表示有无参数均可，有参数可以是任意类型
                全通配写法：
                        * *..*.*(..)

                实际开发中切入点表达式的通常写法：
                    切到业务层实现类下的所有方法
                            * com.itheima.service.impl.*.*(..)
    -->
    <!--配置Logger类 -->
    <bean id="logger" class="com.itheima.Utils.Logger"></bean>

    <!--配置aop -->
    <!--配置AOP-->
    <aop:config>
        <!--配置切面 -->
        <aop:aspect id="logAdvice" ref="logger">
            <!-- 配置通知的类型，并且建立通知方法和切入点方法的关联-->
            <aop:before method="printLog" pointcut="execution(* com.itheima.service.impl.*.*(..))"></aop:before>
        </aop:aspect>
    </aop:config>
</beans>